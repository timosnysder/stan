---
// src/pages/case-studies/[slug].astro
import { getCollection, render } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import DefaultLayout from '@layouts/DefaultLayout.astro'

export async function getStaticPaths() {
  const caseStudies = await getCollection('casestudies')
  
  // Sortiere Case Studies nach Datum (neueste zuerst)
  const sortedCaseStudies = caseStudies.sort((a: CollectionEntry<'casestudies'>, b: CollectionEntry<'casestudies'>) => {
    const dateA = a.data.date ? new Date(a.data.date).getTime() : 0
    const dateB = b.data.date ? new Date(b.data.date).getTime() : 0
    return dateB - dateA // Neueste zuerst
  })
  
  console.log('=== CASE STUDIES DEBUG ===')
  sortedCaseStudies.forEach((cs: CollectionEntry<'casestudies'>) => {
    console.log(`ID: "${cs.id}", Title: "${cs.data.title}", Date: ${cs.data.date}`)
  })
  
  return sortedCaseStudies.map((entry: CollectionEntry<'casestudies'>, index: number) => {
    // Finde vorherige und nächste Case Study
    const prevCaseStudy = index > 0 ? sortedCaseStudies[index - 1] : null
    const nextCaseStudy = index < sortedCaseStudies.length - 1 ? sortedCaseStudies[index + 1] : null
    
    return {
      params: { slug: entry.id.replace('.mdx', '') },
      props: { 
        entry,
        prevCaseStudy,
        nextCaseStudy
      },
    }
  })
}

interface Props {
  entry: CollectionEntry<'casestudies'>
  prevCaseStudy: CollectionEntry<'casestudies'> | null
  nextCaseStudy: CollectionEntry<'casestudies'> | null
}

const { entry, prevCaseStudy, nextCaseStudy }: Props = Astro.props
const { Content } = await render(entry)
---

<DefaultLayout title={`${entry.data.title} - Case Study`}>
  <!-- Hero Section -->
  <section class="py-20 bg-gray-50">
    <div class="max-w-6xl mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-5xl font-bold mb-6 text-gray-900">{entry.data.title}</h1>
        <p class="text-xl text-gray-600 mb-8">{entry.data.description}</p>
        
        <div class="flex flex-wrap justify-center gap-6 text-sm">
          {entry.data.client && (
            <div class="bg-white px-4 py-2 rounded shadow">
              <strong>Client:</strong> {entry.data.client}
            </div>
          )}
          {entry.data.date && (
            <div class="bg-white px-4 py-2 rounded shadow">
              <strong>Datum:</strong> {new Date(entry.data.date).toLocaleDateString('de-DE')}
            </div>
          )}
        </div>
        
        {entry.data.tags && (
          <div class="flex flex-wrap justify-center gap-2 mt-6">
            {entry.data.tags.map((tag: string) => (
              <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>
  </section>
  
  <!-- Featured Image -->
  {entry.data.image && (
    <section class="py-16">
      <div class="max-w-6xl mx-auto px-4">
        <div class="max-w-5xl mx-auto">
          <img 
            src={entry.data.image} 
            alt={entry.data.title}
            class="w-full rounded-lg shadow-xl"
          />
        </div>
      </div>
    </section>
  )}
  
  <!-- Content -->
  <section class="py-16">
    <div class="max-w-6xl mx-auto px-4">
      <div class="max-w-4xl mx-auto">
        <div class="prose prose-lg prose-gray max-w-none">
          <Content />
        </div>
      </div>
    </div>
  </section>
  
  <!-- Navigation -->
  <section class="py-16 bg-gray-50">
    <div class="max-w-6xl mx-auto px-4">
      
      <!-- Case Study Navigation -->
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 items-center mb-12">
        
        <!-- Vorherige Case Study (Links) -->
        <div class="flex justify-start">
          {prevCaseStudy ? (
            <a 
              href={`/case-studies/${prevCaseStudy.id.replace('.mdx', '')}`}
              class="flex flex-col items-start text-gray-700 p-4 rounded-lg hover:bg-gray-100 transition-colors"
            >
              <span class="text-sm text-gray-500 mb-1">← Vorherige</span>
              <span class="font-semibold text-base">{prevCaseStudy.data.title}</span>
              {prevCaseStudy.data.date && (
                <span class="text-xs text-gray-400 mt-1">
                  {new Date(prevCaseStudy.data.date).toLocaleDateString('de-DE')}
                </span>
              )}
            </a>
          ) : (
            <div class="text-gray-300 text-sm">Keine vorherige Case Study</div>
          )}
        </div>
        
        <!-- Zurück zu allen (Zentrum) -->
        <div class="flex justify-center">
          <a 
            href="/case-studies" 
            class="inline-block bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-medium transition-colors"
          >
            Alle Case Studies
          </a>
        </div>
        
        <!-- Nächste Case Study (Rechts) -->
        <div class="flex justify-end">
          {nextCaseStudy ? (
            <a 
              href={`/case-studies/${nextCaseStudy.id.replace('.mdx', '')}`}
              class="flex flex-col items-end text-gray-700 p-4 rounded-lg hover:bg-gray-100 transition-colors"
            >
              <span class="text-sm text-gray-500 mb-1">Nächste →</span>
              <span class="font-semibold text-base text-right">{nextCaseStudy.data.title}</span>
              {nextCaseStudy.data.date && (
                <span class="text-xs text-gray-400 mt-1">
                  {new Date(nextCaseStudy.data.date).toLocaleDateString('de-DE')}
                </span>
              )}
            </a>
          ) : (
            <div class="text-gray-300 text-sm text-right">Keine nächste Case Study</div>
          )}
        </div>
      </div>
      
      <!-- Zusätzliche Navigation -->
      <div class="text-center pt-8 border-t border-gray-200">
        <a 
          href="/" 
          class="inline-block bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg transition-colors"
        >
          Zur Startseite
        </a>
      </div>
    </div>
  </section>
</DefaultLayout>

<style>
  /* Minimal CSS für Content-Styling ohne @apply */
  .prose {
    color: #374151;
  }
  
  .prose h1 {
    font-size: 2.25rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    margin-top: 2rem;
    color: #111827;
  }
  
  .prose h2 {
    font-size: 1.875rem;
    font-weight: 600;
    margin-bottom: 1rem;
    margin-top: 3rem;
    color: #111827;
  }
  
  .prose h3 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    margin-top: 2rem;
    color: #111827;
  }
  
  .prose p {
    margin-bottom: 1rem;
    line-height: 1.625;
  }
  
  .prose ul, .prose ol {
    margin-bottom: 1rem;
    margin-left: 1.5rem;
    padding-left: 1rem;
  }
  
  .prose li {
    margin-bottom: 0.5rem;
  }
  
  .prose ul li {
    list-style-type: disc;
  }
  
  .prose ol li {
    list-style-type: decimal;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose strong {
    font-weight: 600;
  }
  
  .prose em {
    font-style: italic;
  }
  
  .prose blockquote {
    border-left: 4px solid #e5e7eb;
    padding-left: 1rem;
    margin: 1.5rem 0;
    font-style: italic;
    color: #6b7280;
  }
  
  .prose code {
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-family: 'Courier New', monospace;
    font-size: 0.875rem;
  }
  
  .prose pre {
    background-color: #1f2937;
    color: #f9fafb;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
    margin: 1rem 0;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
    color: inherit;
  }
</style>
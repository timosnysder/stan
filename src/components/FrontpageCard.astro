---
/**
 * FrontpageCard Component
 *
 * @description A full-width card component with image and content side by side, optimized for Case Studies display
 */
import { Image } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import { Icon } from 'astro-icon/components'

interface Props extends astroHTML.JSX.HTMLAttributes {
  /**
   * Additional classes to apply to the card
   */
  class?: string
  /**
   * Card's title
   */
  title: string
  /**
   * Card description
   */
  description: string
  /**
   * URL for the card's image
   */
  imgSrc: string
   /**
   * Optional Astro Image component to use instead of a regular img
   * Can be a direct ImageMetadata object or a Promise from import()
   * @default undefined
   */
  imageComponent?: ImageMetadata | Promise<{ default: ImageMetadata }>
  /**
   * URL for the card's link
   */
  url: string
  /**
   * Whether to display the image on the right side instead of the left
   * @default false
   */
  reverseImg?: boolean
  /**
   * Client name
   */
  client?: string
  /**
   * Array of tags
   */
  tags?: string[]
  /**
   * Alt text for the image
   * @default "Case Study Image"
   */
  imageAlt?: string
  /**
   * Width of the image
   * @default 640
   */
  width?: number
  /**
   * Height of the image
   * @default 360
   */
  height?: number
}

const {
  class: className,
  title,
  description,
  imgSrc,
  imageComponent,
  url,
  reverseImg = false,
  client,
  tags,
  imageAlt = 'Case Study Image',
  width = 640,
  height = 360,
  ...rest
} = Astro.props
---

<article class:list={['frontpage-card', className]} {...rest}>
  <a href={url} class="card-link">
    <div class="card-grid" class:list={[{ 'reverse': reverseImg }]}>
      <!-- Image Section -->
      <div class="image-section">
        <div class="image">
           {
            imageComponent ? (
              <Image src={imageComponent} alt={imageAlt} width={width} height={height} />
            ) : (
              <img src={imgSrc} alt={imageAlt} width={width} height={height} />
            )
          }
        </div>
      </div>
    
      <!-- Content Section -->
      <div class="content-section">
        <div class="content">
          <div class="title"><h3>{title}</h3></div>
          <p class="description">{description}</p>
                
          <!-- {tags && tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mt-auto">
              {tags.map(tag => (
                <span class="border-2 border-dashed px-2 py-1 rounded text-xs"> {tag} </span>
              ))}
            </div>
          )} -->
          
          {client && (
            <small class="footer">Client: {client}</small>
          )}
          
        </div>
          <div class="cta">
            <a class="button has-icon">
              <Icon name="lucide:arrow-right" />
              Case Study lesen
            </a>
          </div>
      </div>
    </div>
  </a>
</article>

<style>
  :where(.frontpage-card) {
    --transition-duration: 0.3s;
    --transition-easing: cubic-bezier(0.165, 0.84, 0.44, 1);

    display: flex;
    position: relative;
    flex-direction: row;
    border: 2px solid light-dark(hsl(0 0% 10%), hsl(0 0% 90%));
    border-radius: 0.5rem;
    margin-bottom: 4rem;
    overflow: hidden;


    @media (prefers-reduced-motion: no-preference) {
      transition: box-shadow var(--transition-duration) var(--transition-easing);
    }
  }

  :where(.frontpage-card:hover),
  :where(.frontpage-card:focus-within) {
    box-shadow: 0 0 0 0.25rem;
  }

  :where(.frontpage-card:focus-within) a:focus {
    outline: none;
    box-shadow: none;
    text-decoration: none;
  }

  .card-grid {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    /* min-height: 400px; */

    @media (min-width: 768px) {
      flex-direction: row;
    }
  }

  .card-grid.reverse {
    @media (min-width: 768px) {
      flex-direction: row-reverse;
    }
  }

  .card-grid > * {
    flex-grow: 1;
    flex-basis: 350px;
  }

  .image-section {
    position: relative;
    overflow: hidden;
    flex-grow: 1;
    max-height: 400px;
  }

  .image {
    width: 100%;
    height: 100%;
    min-height: 300px;


    @media (min-width: 768px) {
      min-height: 400px;
      max-height: 550px;
    }
  }

  .image img {
    width: 100%;
    height: 400px;
    object-fit: cover;
    object-position: top;

    @media (prefers-reduced-motion: no-preference) {
      transition: transform var(--transition-duration) var(--transition-easing);
    }
  }

  :where(.frontpage-card:hover) .image img {
    transform: scale(1.05);
    
  }

  .content-section {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-inline: 1rem;
    padding-block: 1rem;

    justify-content: space-between;
    align-items: flex-start;

    @media (min-width: 768px) {
      padding: 2rem;
    }
  }

  .content {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;

  }

  .cta {
    margin-left: auto;
  }

  a {
    color: currentColor;
    text-decoration: none;
  }

  a:where(:hover, :focus-visible) {
    text-decoration: none;
    text-underline-offset: 4px;
  }

  :where(.frontpage-card:has(a:hover, a:focus-visible)) .image img {
    transform: scale(1.05);
  }
  
  :where(.frontpage-card:has(a:hover, a:focus-visible)) .button {
    border-color: light-dark(var(--color-primary-300), var(--color-primary-300));
    background-color: light-dark(var(--color-primary-300), var(--color-primary-300));
    text-decoration-thickness: 2px;
    text-decoration: underline;
    text-underline-offset: 4px;
  }

  :where(.frontpage-card:has(a:hover, a:focus-visible)) .button.has-icon [data-icon] {
    animation: boop 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) forwards;
  }

  a::after {
    position: absolute;
    inset: 0;
    content: '';
  }

  :where(.meta) {
    order: -1;
    margin-block-start: 0.5rem;
  }

  .frontpage-card h3 {
    margin-block-end: var(--space-xs);
    line-height: 1.75;
    color: currentColor;
    font-size: 1.5rem;
  }

  .frontpage-card h3 {
    transition: text-decoration, text-underline-offset, text-decoration-color, text-decoration-thickness;
    transition-duration: var(--animation-speed-fast);
    transition-timing-function: var(--cubic-bezier);
    text-decoration: underline;
    text-decoration-style: solid;
    text-decoration-color: transparent;
    text-decoration-thickness: 4px;
    text-decoration-skip-ink: none;
    text-underline-offset: 4px;
  }

  .frontpage-card a:where(:hover, :focus-visible) h3 {
    text-decoration-color: var(--foreground-color);
    text-decoration-thickness: 2px;
    text-underline-offset: 2px; 
  }
  .meta :global(span) {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.5rem;
  }

  .meta:empty {
    display: none;
  }

  .description {
    font-size: 1rem;
  }

  .description:empty {
    display: none;
  }

  .footer {
    margin-block-start: auto;
    padding-block-start: 1rem;
  }
</style>
---
import { Avatar, Breadcrumbs, BreadcrumbsItem } from 'accessible-astro-components'
import sanitizeHtml from 'sanitize-html'

/**
 * PageHeader Component
 *
 * @description PageHeader für Case Studies mit verbessertem Layout
 */
interface Props {
  /**
   * Additional classes to apply to the PageHeader
   */
  class?: string
  /**
   * The featured image of the page (string path)
   */
  featuredImage?: string
  /**
   * The title of the page
   */
  title: string
  /**
   * The subtitle of the page
   * @description Can contain HTML content (will be sanitized)
   */
  subtitle?: string
  /**
   * The background color of the page header
   * @type {'primary' | 'secondary' | 'neutral' | 'gradient' | 'bordered' | undefined}
   * @default undefined - Uses the default background color
   */
  /**
   * The author of the page
   */
  author?: {
    name: string
    image: string
    bio: string
  }
  /**
   * Project metadata for case studies
   */
  projectMeta?: {
    dateStart?: Date
    dateEnd?: Date
    tags?: string[]
    clientLogo?: string
    myRole?: string
    client?: string
    industrie?: string
  }
  bgType?: 'primary' | 'secondary' | 'neutral' | 'gradient' | 'bordered'
  /**
   * Whether to show the breadcrumbs
   */
  showBreadcrumbs?: boolean
}

const { class: className, title, subtitle, bgType, showBreadcrumbs = true, featuredImage, author, projectMeta } = Astro.props

// Sanitize subtitle HTML if present
const sanitizedSubtitle: string = subtitle
  ? sanitizeHtml(subtitle, {
      allowedTags: ['b', 'i', 'em', 'strong', 'a', 'span', 'br'],
      allowedAttributes: {
        a: ['href', 'title', 'target', 'rel'],
        span: ['class'],
      },
    })
  : ''

// Für Case Studies: Verwende projectMeta falls vorhanden
const isProjectPage = !!projectMeta
const clientName = projectMeta?.client || author?.name
const clientLogo = projectMeta?.clientLogo || author?.image
const myRole = projectMeta?.myRole || author?.bio
---

<section class:list={[className, 'page-header']}>
  <!-- Breadcrumbs -->
  <div class="container my-3">
    {
      showBreadcrumbs &&
        (() => {
          const path = Astro.url.pathname
          const segments = path.split('/').filter(Boolean)

          if (segments.length === 0) {
            return null // No breadcrumbs on homepage
          }

          return (
            <Breadcrumbs>
              <BreadcrumbsItem href="/" label="Home" />
              {segments.map((segment, index) => {
                const url = `/${segments.slice(0, index + 1).join('/')}`
                const isLast = index === segments.length - 1
                const formattedName = segment
                  .split('-')
                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                  .join(' ')

                return <BreadcrumbsItem href={isLast ? undefined : url} label={formattedName} currentPage={isLast} />
              })}
            </Breadcrumbs>
          )
        })()
    }
  </div>

  <!-- Featured Image - Full Width -->
  {featuredImage && (
    <div class="featured-image-section">
      <div class="container">
        <div class="featured-image-container">
          <img
            src={featuredImage}
            alt={title}
            class="featured-image"
            loading="eager"
          />
        </div>
      </div>
    </div>
  )}

  <!-- Main Content Area -->
  <div class:list={['header-content', bgType && `bg-${bgType}`]}>
    <div class="container py-16">
      
      <!-- Title Section -->
      <div class="mb-8">
        <h1 class="text-4xl md:text-6xl font-bold mb-4">{title}</h1>
        {sanitizedSubtitle && (
          <div class="text-xl md:text-2xl" set:html={sanitizedSubtitle} />
        )}
      </div>

      <!-- Project Meta Layout für Case Studies -->
      {isProjectPage ? (
        <div class="project-meta-unified">
          
          <!-- Einheitliche Client + Meta Box -->
          <div class="client-section">
            {clientLogo && (
              <div class="client-logo-container">
                <img 
                  src={clientLogo} 
                  alt={`${clientName} Logo`}
                  class="client-logo"
                />
              </div>
            )}
            <div class="client-info">
              <div class="meta-line">
                {clientName && (
                  <h3 class="client-name">{clientName}</h3>
                )}
                {/* <!-- Tags --> 
                {projectMeta.tags && projectMeta.tags.length > 0 && (
                  <div class="tags-section ">
                    <p class="meta-label">Tags:</p>
                    {projectMeta.tags.map(tag => (
                      <p class="border-2 border-dashed px-2 py-1 rounded text-xs">{tag}</p>
                    ))}
                  </div>
                )}
                */}
                
              </div>  
                {/* <!-- Meta-Informationen in der gleichen Zeile --> */}
                <div class="meta-line">
                  <div class="info-line">
                    {myRole && (
                      <p class="meta-label">Meine Rolle: </p>
                      <p class="my-role">{myRole}</p>
                    )}
                  </div>  
                  {/* <!-- Zeitraum --> */}
                  {(projectMeta.dateStart || projectMeta.dateEnd) && (
                    <div class="meta-item">
                      <p class="meta-label">Zeitraum:</p>
                      <p class="meta-value">
                        {projectMeta.dateStart && new Date(projectMeta.dateStart).toLocaleDateString('de-DE')}
                        {projectMeta.dateStart && projectMeta.dateEnd && ' - '}
                        {projectMeta.dateEnd && new Date(projectMeta.dateEnd).toLocaleDateString('de-DE')}
                      </p>
                    </div>
                  )}
                  {/* <!-- Industrie --> */}
                  {projectMeta?.industrie && (
                    <div class="meta-item">
                      <p class="meta-label">Branche: </p>
                      <p class="my-role">{projectMeta.industrie}</p>
                    </div>
                  )}                  
                </div>
              
            </div>
          </div>
        </div>
      ) : (
        
        author && (
          <div class="standard-author">
            {/* <!-- Standard Author Layout für andere Seiten --> */}
            <Avatar title={author.name} image={author.image} subtitle={author.bio} />
          </div>
        )
      )}
    </div>
  </div>
</section>

<style lang="scss">
  .page-header {
    .bg-primary {
      background-color: light-dark(var(--color-primary-100), var(--color-primary-500));
    }

    .bg-secondary {
      background-color: light-dark(var(--color-secondary-100), var(--color-secondary-500));
    }

    .bg-neutral {
      background-color: light-dark(var(--color-neutral-300), var(--color-neutral-800));
    }

    .bg-gradient {
      background-image: linear-gradient(
        315deg,
        light-dark(var(--color-primary-100), var(--color-secondary-100)) 25%,
        light-dark(var(--color-secondary-100), var(--color-primary-200))
      );
      color: var(--color-neutral-900);
    }

    .bg-bordered {
      border: 1px solid var(--border-color-subtle);
      border-inline: 0;
    }
  }

  /* Featured Image Styles */
  .featured-image-section {
    background-color: #f8f9fa;
    padding: 2rem 0;
  }

  .featured-image-container {
    max-width: 1200px;
    margin: 0 auto;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  .featured-image {
    width: 100%;
    height: auto;
    max-height: 333px;
    object-fit: cover;
    display: block;
  }

  /* Project Meta Unified Layout */
  .project-meta-unified {
    margin-top: 2rem;
  }

  /* Client Section - Logo bestimmt die Höhe */
  .client-section {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background-color: white;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
    min-height: calc(4rem + 3rem); /* Logo-Höhe + Padding */
  }

  .client-logo-container {
    flex-shrink: 0;
    align-self: center;
  }

  .client-logo {
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid #e5e7eb;
  }

  .client-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
  }

  .client-name {
    font-size: 1.25rem;
    font-weight: 600;
    color: #111827;
    margin: 0 0 0.5rem 0;
    line-height: 1.2;
  }

  /* Info Line - my-role und Meta-Informationen auf gleicher Höhe */
  .info-line {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1rem;
    margin: 0;
  }

  .my-role {
    font-size: 1rem;
    color: #111827;
    margin: 0;
    flex-shrink: 0;
  }

  /* Meta Line - kompakter auf gleicher Höhe */
  .meta-line {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    white-space: nowrap;
  }

  .meta-label {
    font-size: 1rem;
    font-weight: 600;
    color: #111827;
  }

  .meta-value {
    font-size: 1rem;
    color: #111827;
    font-weight: 500;
  }

  /* Tags kompakter */
  .tags-section {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 0.375rem;
  }

  .tag {
    background-color: transparent;
    // color: #1e40af;
    padding: 0.2rem 0.6rem;
    border-radius: 9999px;
    border: 1px solid #f9fafb;
    font-size: 1rem;
    font-weight: 500;
    white-space: nowrap;
  }

  /* Standard Author */
  .standard-author {
    margin-top: 1.5rem;
  }

  /* Dark mode adjustments */
  :global(.darkmode) {
    .featured-image-section {
      background-color: #1f2937;
    }

    .client-section {
      background-color: #374151;
      border-color: #4b5563;
    }

    .client-name {
      color: #f9fafb;
    }

    .my-role {
      color: #f9fafb;
    }

    .meta-label {
      color: #f9fafb;
    }

    .meta-value {
      color: #f9fafb;
    }

    .client-logo {
      border-color: #4b5563;
    }

    .tag {
      // background-color: #1e3a8a;
      color: #f9fafb;
    }
  }
</style>